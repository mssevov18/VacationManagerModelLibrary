// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelLibrary.Models.Data;

namespace ModelLibrary.Migrations
{
    [DbContext(typeof(VacationManagerContext))]
    [Migration("20221110163302_Initialise Database")]
    partial class InitialiseDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ModelLibrary.Models.Data.AttachedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AttachedFiles");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Projects")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Teams")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.TeamsWorkingOnProjectsConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex(new[] { "TeamId", "ProjectId" }, "IX_TeamsWorkingOnProjectsConnection")
                        .IsUnique();

                    b.ToTable("TeamsWorkingOnProjectsConnection");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "IX_Users")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.UsersInTeamsConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "TeamId", "UserId" }, "IX_UsersInTeamsConnection")
                        .IsUnique();

                    b.ToTable("UsersInTeamsConnection");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.VacationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AttachedFileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("AttachedFileId");

                    b.HasIndex("RequesterId");

                    b.ToTable("VacationRequests");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.TeamsWorkingOnProjectsConnection", b =>
                {
                    b.HasOne("ModelLibrary.Models.Data.Project", "Project")
                        .WithMany("TeamsWorkingOnProjectsConnections")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_TeamsWorkingOnProjectsConnection_Projects")
                        .IsRequired();

                    b.HasOne("ModelLibrary.Models.Data.Team", "Team")
                        .WithMany("TeamsWorkingOnProjectsConnections")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_TeamsWorkingOnProjectsConnection_Teams")
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.UsersInTeamsConnection", b =>
                {
                    b.HasOne("ModelLibrary.Models.Data.Team", "Team")
                        .WithMany("UsersInTeamsConnections")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_UsersInTeamsConnection_Teams")
                        .IsRequired();

                    b.HasOne("ModelLibrary.Models.Data.User", "User")
                        .WithMany("UsersInTeamsConnections")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsersInTeamsConnection_Users")
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.VacationRequest", b =>
                {
                    b.HasOne("ModelLibrary.Models.Data.User", "ApprovedBy")
                        .WithMany("VacationRequestApprovedBies")
                        .HasForeignKey("ApprovedById")
                        .HasConstraintName("FK_VacationRequests_Users");

                    b.HasOne("ModelLibrary.Models.Data.AttachedFile", "AttachedFile")
                        .WithMany("VacationRequests")
                        .HasForeignKey("AttachedFileId")
                        .HasConstraintName("FK_VacationRequests_AttachedFiles");

                    b.HasOne("ModelLibrary.Models.Data.User", "Requester")
                        .WithMany("VacationRequestRequesters")
                        .HasForeignKey("RequesterId")
                        .HasConstraintName("FK_VacationRequests_Users1")
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("AttachedFile");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.AttachedFile", b =>
                {
                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.Project", b =>
                {
                    b.Navigation("TeamsWorkingOnProjectsConnections");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.Team", b =>
                {
                    b.Navigation("TeamsWorkingOnProjectsConnections");

                    b.Navigation("UsersInTeamsConnections");
                });

            modelBuilder.Entity("ModelLibrary.Models.Data.User", b =>
                {
                    b.Navigation("UsersInTeamsConnections");

                    b.Navigation("VacationRequestApprovedBies");

                    b.Navigation("VacationRequestRequesters");
                });
#pragma warning restore 612, 618
        }
    }
}
